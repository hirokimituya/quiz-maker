// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  accounts      Account[]
  quizzes       Quiz[]
}

model Quiz {
  id          Int       @id @default(autoincrement())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: SetNull)
  genreId     Int
  genre       Genre     @relation(fields: [genreId], references: [id], onDelete: SetNull)
  title       String    @db.VarChar(100)
  description String    @db.VarChar(255)
  filename    String?   @db.VarChar(255)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  items       Item[]
}

model Genre {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(20)
  createdAt DateTime?
  updatedAt DateTime?
  quizzes   Quiz[]
}

model Item {
  id             Int       @id @default(autoincrement())
  quizId         Int
  quiz           Quiz      @relation(fields: [quizId], references: [id], onDelete: Cascade)
  questionNumber Int       @db.SmallInt
  format         Int       @db.SmallInt
  question       String    @db.VarChar(255)
  answer         String    @db.VarChar(255)
  choice1        String?   @db.VarChar(255)
  choice2        String?   @db.VarChar(255)
  choice3        String?   @db.VarChar(255)
  choice4        String?   @db.VarChar(255)
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @updatedAt
}
